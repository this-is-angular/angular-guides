"use strict";(self.webpackChunkthis_is_angular_guides=self.webpackChunkthis_is_angular_guides||[]).push([[4999],{8776:function(t,e,n){n.r(e),n.d(e,{assets:function(){return c},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return p}});var r=n(3117),i=n(102),a=(n(7294),n(3905)),s=["components"],o={},u="Testing a standalone attribute directive using the Angular testbed",l={unversionedId:"standalone-apis/testing-a-standalone-attribute-directive-using-the-angular-testbed",id:"standalone-apis/testing-a-standalone-attribute-directive-using-the-angular-testbed",title:"Testing a standalone attribute directive using the Angular testbed",description:"For the purpose of this example, we will create a standalone attribute directive",source:"@site/docs/standalone-apis/testing-a-standalone-attribute-directive-using-the-angular-testbed.md",sourceDirName:"standalone-apis",slug:"/standalone-apis/testing-a-standalone-attribute-directive-using-the-angular-testbed",permalink:"/angular-guides/docs/standalone-apis/testing-a-standalone-attribute-directive-using-the-angular-testbed",draft:!1,editUrl:"https://github.com/this-is-angular/angular-guides/edit/main/docs/standalone-apis/testing-a-standalone-attribute-directive-using-the-angular-testbed.md",tags:[],version:"current",frontMatter:{},sidebar:"guidesSidebar",previous:{title:"Providing dependencies in a standalone Angular feature",permalink:"/angular-guides/docs/standalone-apis/providing-dependencies-in-a-standalone-angular-feature"},next:{title:"Testing a standalone component using the Angular testbed",permalink:"/angular-guides/docs/standalone-apis/testing-a-standalone-component-using-the-angular-testbed"}},c={},p=[{value:"Creating a test host component for a standalone attribute directive",id:"creating-a-test-host-component-for-a-standalone-attribute-directive",level:2},{value:"Exercising input properties in standalone attribute directive tests",id:"exercising-input-properties-in-standalone-attribute-directive-tests",level:2}],d={toc:p};function m(t){var e=t.components,n=(0,i.Z)(t,s);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"testing-a-standalone-attribute-directive-using-the-angular-testbed"},"Testing a standalone attribute directive using the Angular testbed"),(0,a.kt)("p",null,"For the purpose of this example, we will create a standalone attribute directive\nthat adds the CSS classes provided by ",(0,a.kt)("a",{parentName:"p",href:"https://primer.style/"},"Primer")," for its\n",(0,a.kt)("a",{parentName:"p",href:"https://primer.style/css/components/buttons"},"Button")," component:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'{12} title="primer-button.directive.ts"',"{12}":!0,title:'"primer-button.directive.ts"'},'import { Directive, HostBinding, Input } from "@angular/core";\n\nexport type PrimerButtonVariant = "default" | "primary" | "danger" | "outline" | "invisible";\ntype PrimerButtonVariantClass = `btn-${Exclude<PrimerButtonVariant, "default">}`;\n\nexport type PrimerButtonSize = "small" | "medium" | "large";\ntype PrimerButtonSizeClass = "btn-sm" | "btn-large";\n\n@Directive({\n  exportAs: "primerButton",\n  selector: "[primerButton]",\n  standalone: true,\n})\nexport class PrimerButtonDirective {\n  get #sizeClass(): PrimerButtonSizeClass | null {\n    switch (this.size) {\n      case "small":\n        return "btn-sm";\n      case "large":\n        return "btn-large";\n      case "medium":\n      // Fall through\n      default:\n        return null;\n    }\n  }\n  get #variantClass(): PrimerButtonVariantClass | null {\n    return this.variant === "default" ? null : `btn-${this.variant}`;\n  }\n\n  @Input()\n  size: PrimerButtonSize = "medium";\n  @Input()\n  variant: PrimerButtonVariant = "default";\n\n  @HostBinding("class.btn")\n  protected get baseClassAdded(): true {\n    return true;\n  }\n  @HostBinding("className")\n  protected get className(): string {\n    return [this.#sizeClass, this.#variantClass].filter((className) => className !== null).join("");\n  }\n}\n')),(0,a.kt)("h2",{id:"creating-a-test-host-component-for-a-standalone-attribute-directive"},"Creating a test host component for a standalone attribute directive"),(0,a.kt)("p",null,"To interact with a standalone component through its component API, we add it to the test host component's ",(0,a.kt)("inlineCode",{parentName:"p"},"imports")," array:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'{5,9,11} title="primer-button.directive.spec.ts"',"{5,9,11}":!0,title:'"primer-button.directive.spec.ts"'},'import { Component, Input } from "@angular/core";\nimport { ComponentFixture, TestBed } from "@angular/core/testing";\nimport { By } from "@angular/platform-browser";\n\nimport { PrimerButtonDirective, PrimerButtonSize, PrimerButtonVariant } from "./primer-button.directive";\n\ndescribe(PrimerButtonDirective.name, () => {\n  @Component({\n    imports: [PrimerButtonDirective],\n    standalone: true,\n    template: `<button primerButton [size]="size" [variant]="variant">Button</button>`,\n  })\n  class TestHostComponent {\n    @Input()\n    size: PrimerButtonSize = "medium";\n    @Input()\n    variant: PrimerButtonVariant = "default";\n  }\n\n  beforeEach(() => {\n    hostFixture = TestBed.createComponent(TestHostComponent);\n    host = hostFixture.componentInstance;\n    hostFixture.autoDetectChanges();\n    buttonElement = hostFixture.debugElement.query(By.css("button")).nativeElement;\n  });\n\n  let buttonElement: HTMLButtonElement;\n  let hostFixture: ComponentFixture<TestHostComponent>;\n  let host: TestHostComponent;\n});\n')),(0,a.kt)("h2",{id:"exercising-input-properties-in-standalone-attribute-directive-tests"},"Exercising input properties in standalone attribute directive tests"),(0,a.kt)("p",null,"We use the bound properties of our test host component to exercise our attribute\ndirective's input properties:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'{9-10,16-17} title="primer-button.directive.spec.ts"',"{9-10,16-17}":!0,title:'"primer-button.directive.spec.ts"'},'describe(PrimerButtonDirective.name, () => {\n  // (...)\n\n  it("adds the base class", () => {\n    expect(buttonElement.classList.contains("btn")).toBe(true);\n  });\n\n  it("adds a size class", () => {\n    host.size = "large";\n    hostFixture.detectChanges();\n\n    expect(buttonElement.classList.contains("btn-large")).toBe(true);\n  });\n\n  it("adds a variant class", () => {\n    host.variant = "primary";\n    hostFixture.detectChanges();\n\n    expect(buttonElement.classList.contains("btn-primary")).toBe(true);\n  });\n});\n')),(0,a.kt)("p",null,"Our attribute directive tests verify the attribute directive's side effects by\ninspecting the DOM of its host element."))}m.isMDXComponent=!0},3905:function(t,e,n){n.d(e,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function s(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,r,i=function(t,e){if(null==t)return{};var n,r,i={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var u=r.createContext({}),l=function(t){var e=r.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):s(s({},e),t)),n},c=function(t){var e=l(t.components);return r.createElement(u.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,i=t.mdxType,a=t.originalType,u=t.parentName,c=o(t,["components","mdxType","originalType","parentName"]),d=l(n),m=i,g=d["".concat(u,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(g,s(s({ref:e},c),{},{components:n})):r.createElement(g,s({ref:e},c))}));function m(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var a=n.length,s=new Array(a);s[0]=d;var o={};for(var u in e)hasOwnProperty.call(e,u)&&(o[u]=e[u]);o.originalType=t,o.mdxType="string"==typeof t?t:i,s[1]=o;for(var l=2;l<a;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);