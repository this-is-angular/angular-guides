"use strict";(self.webpackChunkthis_is_angular_guides=self.webpackChunkthis_is_angular_guides||[]).push([[5549],{3974:function(e,r,t){t.r(r),t.d(r,{assets:function(){return l},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var n=t(3117),a=t(102),i=(t(7294),t(3905)),o=["components"],s={contributors:"Lars Gyrup Brink Nielsen"},u="The `multiScan` operator for RxJS",c={unversionedId:"frameworks-and-libraries/rxjs-multi-scan",id:"frameworks-and-libraries/rxjs-multi-scan",title:"The `multiScan` operator for RxJS",description:"Suggested resources",source:"@site/docs/frameworks-and-libraries/rxjs-multi-scan.md",sourceDirName:"frameworks-and-libraries",slug:"/frameworks-and-libraries/rxjs-multi-scan",permalink:"/angular-guides/docs/frameworks-and-libraries/rxjs-multi-scan",draft:!1,editUrl:"https://github.com/this-is-angular/angular-guides/edit/main/docs/frameworks-and-libraries/rxjs-multi-scan.md",tags:[],version:"current",frontMatter:{contributors:"Lars Gyrup Brink Nielsen"},sidebar:"guidesSidebar",previous:{title:"Redux",permalink:"/angular-guides/docs/frameworks-and-libraries/redux"},next:{title:"RxJS",permalink:"/angular-guides/docs/frameworks-and-libraries/rxjs"}},l={},p=[{value:"Suggested resources",id:"suggested-resources",level:2}],m={toc:p};function f(e){var r=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},m,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"the-multiscan-operator-for-rxjs"},"The ",(0,i.kt)("inlineCode",{parentName:"h1"},"multiScan")," operator for RxJS"),(0,i.kt)("h2",{id:"suggested-resources"},"Suggested resources"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/rxjs-multi-scan"},"NPM package page")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/LayZeeDK/rxjs-multi-scan"},"GitHub repository"))),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"rxjs-multi-scan")," is a microlibrary for RxJS. It adds a single operator,\n",(0,i.kt)("inlineCode",{parentName:"p"},"multiScan"),", which combines multiple observable sources into a single scan\noperation."),(0,i.kt)("p",null,"For each observable source, a separate reducer function is applied whenever a\nvalue is emitted."),(0,i.kt)("p",null,"This makes it easy to capture user interaction and other forms of I/O in\nsubjects and observables and combine them into a single state container without\nthe need for a full state management library."))}f.isMDXComponent=!0},3905:function(e,r,t){t.d(r,{Zo:function(){return l},kt:function(){return f}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=n.createContext({}),c=function(e){var r=n.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},l=function(e){var r=c(e.components);return n.createElement(u.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=c(t),f=a,d=m["".concat(u,".").concat(f)]||m[f]||p[f]||i;return t?n.createElement(d,o(o({ref:r},l),{},{components:t})):n.createElement(d,o({ref:r},l))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var u in r)hasOwnProperty.call(r,u)&&(s[u]=r[u]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=t[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);