"use strict";(self.webpackChunkthis_is_angular_guides=self.webpackChunkthis_is_angular_guides||[]).push([[398],{3905:function(n,e,t){t.d(e,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function p(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var l=r.createContext({}),s=function(n){var e=r.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},u=function(n){var e=s(n.components);return r.createElement(l.Provider,{value:e},n.children)},c={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,o=n.originalType,l=n.parentName,u=p(n,["components","mdxType","originalType","parentName"]),d=s(t),m=a,g=d["".concat(l,".").concat(m)]||d[m]||c[m]||o;return t?r.createElement(g,i(i({ref:e},u),{},{components:t})):r.createElement(g,i({ref:e},u))}));function m(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var o=t.length,i=new Array(o);i[0]=d;var p={};for(var l in e)hasOwnProperty.call(e,l)&&(p[l]=e[l]);p.originalType=n,p.mdxType="string"==typeof n?n:a,i[1]=p;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5498:function(n,e,t){t.r(e),t.d(e,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return c}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],p={},l="Using the HttpClient in a standalone Angular application",s={unversionedId:"standalone-apis/using-the-httpclient-in-a-standalone-angular-application",id:"standalone-apis/using-the-httpclient-in-a-standalone-angular-application",title:"Using the HttpClient in a standalone Angular application",description:"As you might know, Angular's HttpClient has many dependencies that we have to provide in Angular applications using it.",source:"@site/docs/standalone-apis/using-the-httpclient-in-a-standalone-angular-application.md",sourceDirName:"standalone-apis",slug:"/standalone-apis/using-the-httpclient-in-a-standalone-angular-application",permalink:"/angular-guides/docs/standalone-apis/using-the-httpclient-in-a-standalone-angular-application",draft:!1,editUrl:"https://github.com/this-is-angular/angular-guides/edit/main/docs/standalone-apis/using-the-httpclient-in-a-standalone-angular-application.md",tags:[],version:"current",frontMatter:{},sidebar:"guidesSidebar",previous:{title:"Providing dependencies in a standalone Angular feature",permalink:"/angular-guides/docs/standalone-apis/providing-dependencies-in-a-standalone-angular-feature"},next:{title:"State management",permalink:"/angular-guides/docs/category/state-management"}},u={},c=[{value:"Interoperability using the HttpClientModule",id:"interoperability-using-the-httpclientmodule",level:2},{value:"Future standalone API",id:"future-standalone-api",level:2}],d={toc:c};function m(n){var e=n.components,t=(0,a.Z)(n,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"using-the-httpclient-in-a-standalone-angular-application"},"Using the HttpClient in a standalone Angular application"),(0,o.kt)("p",null,"As you might know, Angular's ",(0,o.kt)("inlineCode",{parentName:"p"},"HttpClient")," has many dependencies that we have to provide in Angular applications using it."),(0,o.kt)("h2",{id:"interoperability-using-the-httpclientmodule"},"Interoperability using the HttpClientModule"),(0,o.kt)("p",null,"As of Angular version 14.0.0-rc.0, there is no dedicated standalone API for the Angular HTTP client so we pass for example ",(0,o.kt)("inlineCode",{parentName:"p"},"HttpClientModule")," to the ",(0,o.kt)("inlineCode",{parentName:"p"},"importProvidersFrom")," function:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import { HttpClientModule } from "@angular/common/http";\nimport { enableProdMode, importProvidersFrom } from "@angular/core";\nimport { bootstrapApplication } from "@angular/platform-browser";\nimport { BrowserAnimationsModule } from "@angular/platform-browser/animations";\n\nimport { AppComponent } from "./app/app.component";\nimport { environment } from "./environments/environment";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nbootstrapApplication(AppComponent, {\n  providers: [importProvidersFrom(HttpClientModule)],\n}).catch((err) => console.error(err));\n')),(0,o.kt)("h2",{id:"future-standalone-api"},"Future standalone API"),(0,o.kt)("p",null,"In a future Angular version, a function creating the necessary providers will be available. It might look something like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import { withHttpClient } from "@angular/common/http";\nimport { enableProdMode } from "@angular/core";\nimport { bootstrapApplication } from "@angular/platform-browser";\n\nimport { AppComponent } from "./app/app.component";\nimport { environment } from "./environments/environment";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nbootstrapApplication(AppComponent, {\n  providers: [withHttpClient()],\n}).catch((err) => console.error(err));\n')))}m.isMDXComponent=!0}}]);