"use strict";(self.webpackChunkthis_is_angular_guides=self.webpackChunkthis_is_angular_guides||[]).push([[3015],{7887:function(t,e,n){n.r(e),n.d(e,{assets:function(){return g},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return u}});var i=n(3117),a=n(102),s=(n(7294),n(3905)),r=["components"],o={contributors:"Christian Janker"},l="Types of software testing",p={unversionedId:"testing/types-of-software-testing",id:"testing/types-of-software-testing",title:"Types of software testing",description:"Have in mind. This is a first draft. That covers mainly thoughts that popped into my mind.",source:"@site/docs/testing/types-of-software-testing.md",sourceDirName:"testing",slug:"/testing/types-of-software-testing",permalink:"/angular-guides/docs/testing/types-of-software-testing",draft:!1,editUrl:"https://github.com/this-is-angular/angular-guides/edit/main/docs/testing/types-of-software-testing.md",tags:[],version:"current",lastUpdatedBy:"Lars Gyrup Brink Nielsen",lastUpdatedAt:1653690344,formattedLastUpdatedAt:"5/27/2022",frontMatter:{contributors:"Christian Janker"},sidebar:"guidesSidebar",previous:{title:"Testing strategies",permalink:"/angular-guides/docs/testing/testing-strategies"},next:{title:"Tooling",permalink:"/angular-guides/docs/category/tooling"}},g={},u=[{value:"Confidence",id:"confidence",level:2},{value:"Speed",id:"speed",level:2},{value:"Unit Testing",id:"unit-testing",level:2},{value:"Integration Testing",id:"integration-testing",level:2},{value:"End to End Testing",id:"end-to-end-testing",level:2},{value:"Suggested resources",id:"suggested-resources",level:2},{value:"Suggested topics",id:"suggested-topics",level:2},{value:"Notes",id:"notes",level:2},{value:"Black box testing",id:"black-box-testing",level:3},{value:"White box testing",id:"white-box-testing",level:3},{value:"Unit testing",id:"unit-testing-1",level:3},{value:"Incremental integration testing",id:"incremental-integration-testing",level:3},{value:"Integration testing",id:"integration-testing-1",level:3},{value:"Functional testing",id:"functional-testing",level:3},{value:"System testing",id:"system-testing",level:3},{value:"End-to-end testing",id:"end-to-end-testing-1",level:3},{value:"Sanity testing",id:"sanity-testing",level:3},{value:"Regression testing",id:"regression-testing",level:3},{value:"Acceptance testing",id:"acceptance-testing",level:3},{value:"Load testing",id:"load-testing",level:3},{value:"Stress testing",id:"stress-testing",level:3},{value:"Performance testing",id:"performance-testing",level:3},{value:"Usability testing",id:"usability-testing",level:3},{value:"Install/uninstall testing",id:"installuninstall-testing",level:3},{value:"Recovery testing",id:"recovery-testing",level:3},{value:"Security testing",id:"security-testing",level:3},{value:"Compatibility testing",id:"compatibility-testing",level:3},{value:"Comparison testing",id:"comparison-testing",level:3},{value:"Alpha testing",id:"alpha-testing",level:3},{value:"Beta testing",id:"beta-testing",level:3},{value:"Migration testing",id:"migration-testing",level:3},{value:"Application migration",id:"application-migration",level:4},{value:"Database migration",id:"database-migration",level:4},{value:"Server migration",id:"server-migration",level:4},{value:"OS migration",id:"os-migration",level:4}],d={toc:u};function m(t){var e=t.components,n=(0,a.Z)(t,r);return(0,s.kt)("wrapper",(0,i.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"types-of-software-testing"},"Types of software testing"),(0,s.kt)("p",null,"Have in mind. This is a first draft. That covers mainly thoughts that popped into my mind.\nTranscript from my talk about testing."),(0,s.kt)("p",null,"If you are not yet a convert to testing, you may have heard your colleagues banging the drum about the value of testing, tried it and found it slow,\ncomplex and distracting or even unnecessary."),(0,s.kt)("p",null,"And yet, there is this little nagging voice that asks: Are you missing something? Should you push yourself again and master this domain?"),(0,s.kt)("p",null,"YES! Try it! We will guide you."),(0,s.kt)("p",null,"If you have alreday some experience with testing tools like Jasmine or Jest, then you are most likely familiar with the key words:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Describe"),(0,s.kt)("li",{parentName:"ul"},"It"),(0,s.kt)("li",{parentName:"ul"},"Expect")),(0,s.kt)("p",null,"If you make that into a three letter acronym you get: DIE"),(0,s.kt)("p",null,"This is how many people feel when it comes to testing. It feels something like a little death!"),(0,s.kt)("p",null,"Let's try to change that."),(0,s.kt)("p",null,"Why do we write tests at all?\nEver had this thought? Me too :)\nBut more often that is just the conclusion we come up when we don't know how test a certain piece of code.\nWe then often say: This can't be tested followed by\nThere is nothing to test here."),(0,s.kt)("p",null,"This is wrong, and let's be honest. Every responsible and professional developer knows that automated testing\nis part of the job. That's how we have learned it. Right?\nClosing a given task without having written a single test for it? We don't do this. Right?\nWe want to professionals!\nWe want to be good developers!\nWe want to be heros.\n",(0,s.kt)("a",{parentName:"p",href:"https://images.unsplash.com/photo-1531907700752-62799b2a3e84?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80"},"hero")),(0,s.kt)("h1",{id:"motivation-to-testing"},"Motivation to testing"),(0,s.kt)("p",null,"Before we deep dive into the technical bits an pieces of testing your Angular application, we have to go through some\nbasic points."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"If you ever have to convince somebody to write tests? Colleagues, yourself. Please read on."),(0,s.kt)("li",{parentName:"ul"},"If you ever have to convince your managers that testing is important? Please read on."),(0,s.kt)("li",{parentName:"ul"},"If you think testing is a waste of time? Please read on."),(0,s.kt)("li",{parentName:"ul"},"If you hate your tests? Please read on."),(0,s.kt)("li",{parentName:"ul"},"If you don't know what to test? Please read on."),(0,s.kt)("li",{parentName:"ul"},"If you do testing, but it doesn't feel quite right the way you do it. Please read on.")),(0,s.kt)("p",null,"It seems testing is not very popular amongst us (frontend) developers. At least I made this experience,\nbasically with every project I was involed in. But why is this the case?"),(0,s.kt)("p",null,"Why is testing such a burden for us? Why do we test at all?"),(0,s.kt)("p",null,"Every professional developer knows, at least somewhere back in his/her mind, that testing and writing test is a essential part of their daily development life.\nThat's what we have learned."),(0,s.kt)("p",null,"Good developers write tests!"),(0,s.kt)("p",null,"NOPE"),(0,s.kt)("p",null,"Good developers write good tests"),(0,s.kt)("p",null,"What are good tests?"),(0,s.kt)("p",null,"Testing behaviour not implementation details!"),(0,s.kt)("p",null,"Clean, readable test!"),(0,s.kt)("p",null,"Good Case\nBad Case\nEdge Case"),(0,s.kt)("p",null,"Avoid False Positives\nAvoid False Negatives"),(0,s.kt)("h2",{id:"confidence"},"Confidence"),(0,s.kt)("p",null,"The most important point. Not only during development we assure that we develop our application correctly"),(0,s.kt)("h2",{id:"speed"},"Speed"),(0,s.kt)("h1",{id:"types-of-software-testing-1"},"Types of software testing"),(0,s.kt)("p",null,"Some types of testing are not relevant to Angular projects, but maybe there are\nparallels to be drawn."),(0,s.kt)("h2",{id:"unit-testing"},"Unit Testing"),(0,s.kt)("h2",{id:"integration-testing"},"Integration Testing"),(0,s.kt)("h2",{id:"end-to-end-testing"},"End to End Testing"),(0,s.kt)("h2",{id:"suggested-resources"},"Suggested resources"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://angular.io/guide/testing"},"Angular.io: Testing guide")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://www.softwaretestinghelp.com/types-of-software-testing/"},"Types Of Software Testing: Different Testing Types With Details")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://www.softwaretestinghelp.com/category/types-of-testing/"},"Software Testing Help: Types of testing category"))),(0,s.kt)("h2",{id:"suggested-topics"},"Suggested topics"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Mutation testing",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"../frameworks-and-libraries/stryker"},"Stryker")))),(0,s.kt)("li",{parentName:"ul"},"End-to-end testing"),(0,s.kt)("li",{parentName:"ul"},"Unit testing"),(0,s.kt)("li",{parentName:"ul"},"Integration testing"),(0,s.kt)("li",{parentName:"ul"},"Contract testing",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"../frameworks-and-libraries/jscheck"},"JSCheck"))))),(0,s.kt)("h2",{id:"notes"},"Notes"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Function testing types"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Unit testing"),(0,s.kt)("li",{parentName:"ul"},"Integration testing"),(0,s.kt)("li",{parentName:"ul"},"System testing"),(0,s.kt)("li",{parentName:"ul"},"Sanity testing"),(0,s.kt)("li",{parentName:"ul"},"Smoke testing"),(0,s.kt)("li",{parentName:"ul"},"Interface testing"),(0,s.kt)("li",{parentName:"ul"},"Regression testing"),(0,s.kt)("li",{parentName:"ul"},"Beta/Acceptance testing"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Non-function testing types"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Performance Testing"),(0,s.kt)("li",{parentName:"ul"},"Load testing"),(0,s.kt)("li",{parentName:"ul"},"Stress testing"),(0,s.kt)("li",{parentName:"ul"},"Volume testing"),(0,s.kt)("li",{parentName:"ul"},"Security testing"),(0,s.kt)("li",{parentName:"ul"},"Compatibility testing"),(0,s.kt)("li",{parentName:"ul"},"Install/uninstall testing"),(0,s.kt)("li",{parentName:"ul"},"Recovery testing"),(0,s.kt)("li",{parentName:"ul"},"Reliability testing"),(0,s.kt)("li",{parentName:"ul"},"Usability testing"),(0,s.kt)("li",{parentName:"ul"},"Compliance testing"),(0,s.kt)("li",{parentName:"ul"},"Localization testing"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Ad-hoc testing")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Manual testing vs. automated testing")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Accessibility testing")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Back-end testing")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Browser compatibility testing")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Backwards compatibility testing")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Boundary value testing")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Branch testing")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"(Software) component testing")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Equivalence Partitioning")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Example testing")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Exploratory testing")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"GUI testing")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Gorilla testing")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Happy path testing")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Incremental integration testing")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Monkey testing")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Negative testing")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Risk-based Testing (RBT)")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Static testing")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Vulnerability testing"))),(0,s.kt)("h3",{id:"black-box-testing"},"Black box testing"),(0,s.kt)("p",null,"Internal system design is not considered in this type of testing. Tests are\nbased on requirements and functionality."),(0,s.kt)("h3",{id:"white-box-testing"},"White box testing"),(0,s.kt)("p",null,"This testing is based on knowledge of the internal logic of an application\u2019s\ncode. Also known as Glass box Testing. Internal software and code working should\nbe known for this type of testing. Tests are based on coverage of code\nstatements, branches, paths, conditions."),(0,s.kt)("h3",{id:"unit-testing-1"},"Unit testing"),(0,s.kt)("p",null,"Testing of individual software components or modules. Typically done by the\nprogrammer and not by testers, as it requires detailed knowledge of the internal\nprogram design and code. may require developing test driver modules or test\nharnesses."),(0,s.kt)("h3",{id:"incremental-integration-testing"},"Incremental integration testing"),(0,s.kt)("p",null,"Bottom up approach for testing i.e continuous testing of an application as new\nfunctionality is added; Application functionality and modules should be\nindependent enough to test separately. done by programmers or by testers."),(0,s.kt)("h3",{id:"integration-testing-1"},"Integration testing"),(0,s.kt)("p",null,"Testing of integrated modules to verify combined functionality after\nintegration. Modules are typically code modules, individual applications, client\nand server applications on a network, etc. This type of testing is especially\nrelevant to client/server and distributed systems."),(0,s.kt)("h3",{id:"functional-testing"},"Functional testing"),(0,s.kt)("p",null,"This type of testing ignores the internal parts and focus on the output is as\nper requirement or not. Black-box type testing geared to functional requirements\nof an application."),(0,s.kt)("h3",{id:"system-testing"},"System testing"),(0,s.kt)("p",null,"Entire system is tested as per the requirements. Black-box type testing that is\nbased on overall requirements specifications, covers all combined parts of a\nsystem."),(0,s.kt)("h3",{id:"end-to-end-testing-1"},"End-to-end testing"),(0,s.kt)("p",null,"Similar to system testing, involves testing of a complete application\nenvironment in a situation that mimics real-world use, such as interacting with\na database, using network communications, or interacting with other hardware,\napplications, or systems if appropriate."),(0,s.kt)("h3",{id:"sanity-testing"},"Sanity testing"),(0,s.kt)("p",null,"Testing to determine if a new software version is performing well enough to\naccept it for a major testing effort. If application is crashing for initial use\nthen system is not stable enough for further testing and build or application is\nassigned to fix."),(0,s.kt)("h3",{id:"regression-testing"},"Regression testing"),(0,s.kt)("p",null,"Testing the application as a whole for the modification in any module or\nfunctionality. Difficult to cover all the system in regression testing so\ntypically automation tools are used for these testing types."),(0,s.kt)("h3",{id:"acceptance-testing"},"Acceptance testing"),(0,s.kt)("p",null,"Normally this type of testing is done to verify if system meets the customer\nspecified requirements. User or customer do this testing to determine whether to\naccept application."),(0,s.kt)("h3",{id:"load-testing"},"Load testing"),(0,s.kt)("p",null,"Its a performance testing to check system behavior under load. Testing an\napplication under heavy loads, such as testing of a web site under a range of\nloads to determine at what point the system\u2019s response time degrades or fails."),(0,s.kt)("h3",{id:"stress-testing"},"Stress testing"),(0,s.kt)("p",null,"System is stressed beyond its specifications to check how and when it fails.\nPerformed under heavy load like putting large number beyond storage capacity,\ncomplex database queries, continuous input to system or database load."),(0,s.kt)("h3",{id:"performance-testing"},"Performance testing"),(0,s.kt)("p",null,"Term often used interchangeably with \u2018stress\u2019 and \u2018load\u2019 testing. To check\nwhether system meets performance requirements. Used different performance and\nload tools to do this."),(0,s.kt)("h3",{id:"usability-testing"},"Usability testing"),(0,s.kt)("p",null,"User-friendliness check. Application flow is tested, Can new user understand the\napplication easily, Proper help documented whenever user stuck at any point.\nBasically system navigation is checked in this testing."),(0,s.kt)("h3",{id:"installuninstall-testing"},"Install/uninstall testing"),(0,s.kt)("p",null,"Tested for full, partial, or upgrade install/uninstall processes on different\noperating systems under different hardware, software environment."),(0,s.kt)("h3",{id:"recovery-testing"},"Recovery testing"),(0,s.kt)("p",null,"Testing how well a system recovers from crashes, hardware failures, or other\ncatastrophic problems."),(0,s.kt)("h3",{id:"security-testing"},"Security testing"),(0,s.kt)("p",null,"Can system be penetrated by any hacking way. Testing how well the system\nprotects against unauthorized internal or external access. Checked if system,\ndatabase is safe from external attacks."),(0,s.kt)("h3",{id:"compatibility-testing"},"Compatibility testing"),(0,s.kt)("p",null,"Testing how well software performs in a particular hardware/software/operating\nsystem/network environment and different combination s of above."),(0,s.kt)("h3",{id:"comparison-testing"},"Comparison testing"),(0,s.kt)("p",null,"Comparison of product strengths and weaknesses with previous versions or other\nsimilar products."),(0,s.kt)("h3",{id:"alpha-testing"},"Alpha testing"),(0,s.kt)("p",null,"In house virtual user environment can be created for this type of testing.\nTesting is done at the end of development. Still minor design changes may be\nmade as a result of such testing."),(0,s.kt)("h3",{id:"beta-testing"},"Beta testing"),(0,s.kt)("p",null,"Testing typically done by end-users or others. Final testing before releasing\napplication for commercial purpose."),(0,s.kt)("h3",{id:"migration-testing"},"Migration testing"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"http://www.softwaretestinghelp.com/migration-testing-types/"},"http://www.softwaretestinghelp.com/migration-testing-types/"),"\nMigration Testing is a verification process of migration of the legacy system to\nthe new system with minimal disruption/downtime, with data integrity and no loss\nof data, while ensuring that all the specified functional and non-functional\naspects of the application are met post-migration.")),(0,s.kt)("h4",{id:"application-migration"},"Application migration"),(0,s.kt)("p",null,"Application migration is a type where entire application is migrated from one\nenvironment or platform to another."),(0,s.kt)("h4",{id:"database-migration"},"Database migration"),(0,s.kt)("p",null,"Database migration is a type of migration where all the data in the database of\nan application is migrated to another database."),(0,s.kt)("p",null,"For this type of migration, the application should be stable and the data in the\ndatabase should be correct and valid. Hence, the format, type, value etc.,\nmatters while migrating between databases."),(0,s.kt)("h4",{id:"server-migration"},"Server migration"),(0,s.kt)("p",null,"Server migration is a type of migration where the server data is moved from one\nserver to another server. Here configuration also gets migrated to the new\nserver along with the server data."),(0,s.kt)("h4",{id:"os-migration"},"OS migration"),(0,s.kt)("p",null,"OS Migration is a type of migration where an application is migrated from one\noperating system to another. This involves a lot of challenges as the base\nplatform itself is changed and there is a huge risk of compatibility. Even\nnetwork, configurations, interfaces, and a lot more components require\nre-designing."))}m.isMDXComponent=!0},3905:function(t,e,n){n.d(e,{Zo:function(){return g},kt:function(){return m}});var i=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function s(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function r(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?s(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,i,a=function(t,e){if(null==t)return{};var n,i,a={},s=Object.keys(t);for(i=0;i<s.length;i++)n=s[i],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(i=0;i<s.length;i++)n=s[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var l=i.createContext({}),p=function(t){var e=i.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):r(r({},e),t)),n},g=function(t){var e=p(t.components);return i.createElement(l.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return i.createElement(i.Fragment,{},e)}},d=i.forwardRef((function(t,e){var n=t.components,a=t.mdxType,s=t.originalType,l=t.parentName,g=o(t,["components","mdxType","originalType","parentName"]),d=p(n),m=a,c=d["".concat(l,".").concat(m)]||d[m]||u[m]||s;return n?i.createElement(c,r(r({ref:e},g),{},{components:n})):i.createElement(c,r({ref:e},g))}));function m(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var s=n.length,r=new Array(s);r[0]=d;var o={};for(var l in e)hasOwnProperty.call(e,l)&&(o[l]=e[l]);o.originalType=t,o.mdxType="string"==typeof t?t:a,r[1]=o;for(var p=2;p<s;p++)r[p]=n[p];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);