"use strict";(self.webpackChunkthis_is_angular_guides=self.webpackChunkthis_is_angular_guides||[]).push([[4596],{3905:function(n,e,t){t.d(e,{Zo:function(){return s},kt:function(){return m}});var o=t(7294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function p(n,e){if(null==n)return{};var t,o,r=function(n,e){if(null==n)return{};var t,o,r={},a=Object.keys(n);for(o=0;o<a.length;o++)t=a[o],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(o=0;o<a.length;o++)t=a[o],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var l=o.createContext({}),u=function(n){var e=o.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},s=function(n){var e=u(n.components);return o.createElement(l.Provider,{value:e},n.children)},c={inlineCode:"code",wrapper:function(n){var e=n.children;return o.createElement(o.Fragment,{},e)}},d=o.forwardRef((function(n,e){var t=n.components,r=n.mdxType,a=n.originalType,l=n.parentName,s=p(n,["components","mdxType","originalType","parentName"]),d=u(t),m=r,f=d["".concat(l,".").concat(m)]||d[m]||c[m]||a;return t?o.createElement(f,i(i({ref:e},s),{},{components:t})):o.createElement(f,i({ref:e},s))}));function m(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var a=t.length,i=new Array(a);i[0]=d;var p={};for(var l in e)hasOwnProperty.call(e,l)&&(p[l]=e[l]);p.originalType=n,p.mdxType="string"==typeof n?n:r,i[1]=p;for(var u=2;u<a;u++)i[u]=t[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6573:function(n,e,t){t.r(e),t.d(e,{assets:function(){return s},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return p},metadata:function(){return u},toc:function(){return c}});var o=t(7462),r=t(3366),a=(t(7294),t(3905)),i=["components"],p={},l="Adding top-level routes to a standalone Angular application",u={unversionedId:"standalone-apis/adding-top-level-routes-to-a-standalone-angular-application",id:"standalone-apis/adding-top-level-routes-to-a-standalone-angular-application",title:"Adding top-level routes to a standalone Angular application",description:"Interoperability using the RouterModule",source:"@site/docs/standalone-apis/adding-top-level-routes-to-a-standalone-angular-application.md",sourceDirName:"standalone-apis",slug:"/standalone-apis/adding-top-level-routes-to-a-standalone-angular-application",permalink:"/angular-guides/docs/standalone-apis/adding-top-level-routes-to-a-standalone-angular-application",draft:!1,editUrl:"https://github.com/this-is-angular/angular-guides/edit/main/docs/standalone-apis/adding-top-level-routes-to-a-standalone-angular-application.md",tags:[],version:"current",frontMatter:{},sidebar:"guidesSidebar",previous:{title:"Standalone APIs",permalink:"/angular-guides/docs/category/standalone-apis"},next:{title:"Bootstrapping a standalone application",permalink:"/angular-guides/docs/standalone-apis/bootstrapping-a-standalone-application"}},s={},c=[{value:"Interoperability using the RouterModule",id:"interoperability-using-the-routermodule",level:2},{value:"Future standalone API",id:"future-standalone-api",level:2}],d={toc:c};function m(n){var e=n.components,t=(0,r.Z)(n,i);return(0,a.kt)("wrapper",(0,o.Z)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"adding-top-level-routes-to-a-standalone-angular-application"},"Adding top-level routes to a standalone Angular application"),(0,a.kt)("h2",{id:"interoperability-using-the-routermodule"},"Interoperability using the RouterModule"),(0,a.kt)("p",null,"As of Angular version 14.0.0-rc.0, there is no dedicated standalone API for the Angular router so we pass ",(0,a.kt)("inlineCode",{parentName:"p"},"RouterModule.forRoot")," to the ",(0,a.kt)("inlineCode",{parentName:"p"},"importProvidersFrom")," function:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'import { enableProdMode, importProvidersFrom } from "@angular/core";\nimport { bootstrapApplication } from "@angular/platform-browser";\nimport { RouterModule, Routes } from "@angular/router";\n\nimport { AboutComponent } from "./app/about.component";\nimport { AppComponent } from "./app/app.component";\nimport { HomeComponent } from "./app/home.component";\nimport { environment } from "./environments/environment";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconst routes: Routes = [\n  {\n    path: "",\n    pathMatch: "full",\n    redirectTo: "home",\n  },\n  {\n    path: "home",\n    component: HomeComponent,\n  },\n  {\n    path: "about",\n    component: AboutComponent,\n  },\n];\n\nbootstrapApplication(AppComponent, {\n  providers: [importProvidersFrom(RouterModule.forRoot(routes))],\n}).catch((err) => console.error(err));\n')),(0,a.kt)("h2",{id:"future-standalone-api"},"Future standalone API"),(0,a.kt)("p",null,"In a future Angular version, a function creating the necessary providers will be available. It might look something like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'import { enableProdMode } from "@angular/core";\nimport { bootstrapApplication } from "@angular/platform-browser";\nimport { Routes, withRoutes } from "@angular/router";\n\nimport { AboutComponent } from "./app/about.component";\nimport { AppComponent } from "./app/app.component";\nimport { HomeComponent } from "./app/home.component";\nimport { environment } from "./environments/environment";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconst routes: Routes = [\n  {\n    path: "",\n    pathMatch: "full",\n    redirectTo: "home",\n  },\n  {\n    path: "home",\n    component: HomeComponent,\n  },\n  {\n    path: "about",\n    component: AboutComponent,\n  },\n];\n\nbootstrapApplication(AppComponent, {\n  providers: [withRoutes(routes)],\n}).catch((err) => console.error(err));\n')))}m.isMDXComponent=!0}}]);