"use strict";(self.webpackChunkthis_is_angular_guides=self.webpackChunkthis_is_angular_guides||[]).push([[2314],{7383:function(e,n,o){o.r(n),o.d(n,{assets:function(){return u},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return c}});var t=o(3117),r=o(102),a=(o(7294),o(3905)),l=["components"],i={},p="Exporting standalone components from Angular libraries",s={unversionedId:"standalone-apis/exporting-standalone-components-from-angular-libraries",id:"standalone-apis/exporting-standalone-components-from-angular-libraries",title:"Exporting standalone components from Angular libraries",description:"Exporting unrelated standalone components from Angular libraries",source:"@site/docs/standalone-apis/exporting-standalone-components-from-angular-libraries.md",sourceDirName:"standalone-apis",slug:"/standalone-apis/exporting-standalone-components-from-angular-libraries",permalink:"/angular-guides/docs/standalone-apis/exporting-standalone-components-from-angular-libraries",draft:!1,editUrl:"https://github.com/this-is-angular/angular-guides/edit/main/docs/standalone-apis/exporting-standalone-components-from-angular-libraries.md",tags:[],version:"current",lastUpdatedBy:"Lars Gyrup Brink Nielsen",lastUpdatedAt:1653690344,formattedLastUpdatedAt:"5/27/2022",frontMatter:{},sidebar:"guidesSidebar",previous:{title:"Enabling animations in a standalone Angular application",permalink:"/angular-guides/docs/standalone-apis/enabling-animations-in-a-standalone-angular-application"},next:{title:"Lazy loading a feature using the Angular Router",permalink:"/angular-guides/docs/standalone-apis/lazy-loading-a-feature-using-the-angular-router"}},u={},c=[{value:"Exporting unrelated standalone components from Angular libraries",id:"exporting-unrelated-standalone-components-from-angular-libraries",level:2},{value:"Interoperability with NgModules",id:"interoperability-with-ngmodules",level:3},{value:"Exporting cohesive standalone components from Angular libraries",id:"exporting-cohesive-standalone-components-from-angular-libraries",level:2},{value:"Interoperability with NgModules",id:"interoperability-with-ngmodules-1",level:3}],m={toc:c};function d(e){var n=e.components,o=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,t.Z)({},m,o,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"exporting-standalone-components-from-angular-libraries"},"Exporting standalone components from Angular libraries"),(0,a.kt)("h2",{id:"exporting-unrelated-standalone-components-from-angular-libraries"},"Exporting unrelated standalone components from Angular libraries"),(0,a.kt)("p",null,"Libraries export standalone components, directives, and pipes directly from their public API, usually an ",(0,a.kt)("inlineCode",{parentName:"p"},"index.ts")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"public_api.ts")," file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'export * from "./lib/our-button.component";\nexport * from "./lib/our-checkbox.component";\n')),(0,a.kt)("p",null,"Standalone components consuming the library import the components through their ",(0,a.kt)("inlineCode",{parentName:"p"},"imports")," array:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { Component } from "@angular/core";\nimport { OurButtonComponent } from "@our-org/our-lib";\n\nimport { RocketService } from "./rocket.service";\n\n@Component({\n  imports: [OurButtonComponent],\n  standalone: true,\n  template: `<our-button (click)="onRocketLaunch()">Launch rocket</our-button>`,\n})\nexport class RocketComponent {\n  #rocket: RocketService;\n\n  constructor(rocket: RocketService) {\n    this.#rocket = rocket;\n  }\n\n  onRocketLaunch(): void {\n    this.#rocket.launch();\n  }\n}\n')),(0,a.kt)("h3",{id:"interoperability-with-ngmodules"},"Interoperability with NgModules"),(0,a.kt)("p",null,"Legacy components depending add the standalone component to their NgModule's ",(0,a.kt)("inlineCode",{parentName:"p"},"imports")," array:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { Component, NgModule } from "@angular/core";\nimport { OurButtonComponent } from "@our-org/our-lib";\n\nimport { RocketService } from "./rocket.service";\n\n@Component({\n  template: `<our-button (click)="onRocketLaunch()">Launch rocket</our-button>`,\n})\nexport class RocketComponent {\n  #rocket: RocketService;\n\n  constructor(rocket: RocketService) {\n    this.#rocket = rocket;\n  }\n\n  onRocketLaunch(): void {\n    this.#rocket.launch();\n  }\n}\n\n@NgModule({\n  declarations: [RocketComponent],\n  exports: [RocketComponent],\n  imports: [OurButtonComponent],\n})\nexport class RocketModule {}\n')),(0,a.kt)("h2",{id:"exporting-cohesive-standalone-components-from-angular-libraries"},"Exporting cohesive standalone components from Angular libraries"),(0,a.kt)("p",null,"In case multiple components, directive, and pipes are always used together, we export them in an array from our library's public API:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { OurTableCellComponent } from "./lib/table/our-table-cell.component";\nimport { OurTableRowComponent } from "./lib/table/our-table-row.component";\nimport { OurTableComponent } from "./lib/table/our-table.component";\n\nimport type { Type } from "@angular/core";\n\n// (Optionally) export the individual types for selective importing and\n// referencing instances for queries and similar purposes\nexport OurTableCellComponent;\nexport OurTableRowComponent;\nexport OurTableComponent;\n\n// Export cohesive standalone declarables for easy importing\nexport type OurTableType = OurTableCellComponent | OurTableRowComponent | OurTableComponent;\nexport const ourTableImports: Type<OurTableType>[] = [\n  OurTableCellComponent,\n  OurTableRowComponent,\n  OurTableComponent,\n];\n')),(0,a.kt)("p",null,"Standalone components consuming the library import the components through their ",(0,a.kt)("inlineCode",{parentName:"p"},"imports")," array:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { CommonModule } from "@angular/common";\nimport { Component } from "@angular/core";\nimport { ourTableImports } from "@our-org/our-lib";\n\nimport { DataGridService } from "./data-grid.service";\n\n@Component({\n  imports: [CommonModule, ourTableImports],\n  standalone: true\n  template: `\n    <our-table>\n      <our-table-row *ngFor="let row of rows$ | async">\n        <our-table-cell *ngFor="let cell of row.cells">\n          {{ cell.text }}\n        </our-table-cell>\n    </our-table>\n  `,\n})\nexport class DataGridComponent {\n  rows$ =\n\n  constructor(dataGridService: DataGridService) {\n    this.rows$ = dataGridService.rows$;\n  }\n}\n')),(0,a.kt)("h3",{id:"interoperability-with-ngmodules-1"},"Interoperability with NgModules"),(0,a.kt)("p",null,"Legacy components depending add the exported components to their NgModule's ",(0,a.kt)("inlineCode",{parentName:"p"},"imports")," array:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { CommonModule } from "@angular/common";\nimport { Component, NgModule } from "@angular/core";\nimport { ourTableImports } from "@our-org/our-lib";\n\nimport { DataGridService } from "./data-grid.service";\n\n@Component({\n  imports: [CommonModule, ourTableImports],\n  standalone: true\n  template: `\n    <our-table>\n      <our-table-row *ngFor="let row of rows$ | async">\n        <our-table-cell *ngFor="let cell of row.cells">\n          {{ cell.text }}\n        </our-table-cell>\n    </our-table>\n  `,\n})\nexport class DataGridComponent {\n  rows$ =\n\n  constructor(dataGridService: DataGridService) {\n    this.rows$ = dataGridService.rows$;\n  }\n}\n\n@NgModule({\n  declarations: [DataGridComponent],\n  exports: [DataGridComponent],\n  imports: [CommonModule, ourTableImports]\n})\nexport class DataGridModule {}\n')))}d.isMDXComponent=!0},3905:function(e,n,o){o.d(n,{Zo:function(){return u},kt:function(){return d}});var t=o(7294);function r(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function a(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,t)}return o}function l(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?a(Object(o),!0).forEach((function(n){r(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function i(e,n){if(null==e)return{};var o,t,r=function(e,n){if(null==e)return{};var o,t,r={},a=Object.keys(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||(r[o]=e[o]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var p=t.createContext({}),s=function(e){var n=t.useContext(p),o=n;return e&&(o="function"==typeof e?e(n):l(l({},n),e)),o},u=function(e){var n=s(e.components);return t.createElement(p.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var o=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=s(o),d=r,g=m["".concat(p,".").concat(d)]||m[d]||c[d]||a;return o?t.createElement(g,l(l({ref:n},u),{},{components:o})):t.createElement(g,l({ref:n},u))}));function d(e,n){var o=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=o.length,l=new Array(a);l[0]=m;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<a;s++)l[s]=o[s];return t.createElement.apply(null,l)}return t.createElement.apply(null,o)}m.displayName="MDXCreateElement"}}]);